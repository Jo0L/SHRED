<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('include/_header') %>
    <link rel="stylesheet" href="css/payment.css">
</head>

<body>
    <div class="cart-container">
        <h1>Payment Details</h1>

        <div class="cart-wrapper">
            <aside class="order-summary">
                <h3>Order Summary</h3>
                <p>Subtotal: <span id="subtotal">$<%= subtotal %></span></p>
                <p>Shipping: <span id="shipping">$<%= shipping %></span></p>
                <p>Tax: <span id="tax">$<%= tax %></span></p>
                <p class="total">Total: <span id="total">$<%= total %></span></p>
            </aside>

            <div class="payment-details">
                <h3>Credit Card Information</h3>
                <form action="/confirm-payment" method="POST">
                    <div class="form-group">
                        <label for="cardNumber">Card Number</label>
                        <input type="text" id="cardNumber" name="cardNumber" pattern="^\d{16}$" title="Please enter a valid card number (16 digits)" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="cardHolder">Cardholder Name</label>
                        <input type="text" id="cardHolder" name="cardHolder" pattern="^[a-zA-Z\s]+$" title="Cardholder name can only contain letters and spaces" required>
                    </div>
                    
                    <div class="form-group-wrapper">
                        <div class="form-group">
                            <label for="expiryDate">Expiry Date (MM/YY)</label>
                            <input type="text" id="expiryDate" name="expiryDate" pattern="^(0[1-9]|1[0-2])\/?([0-9]{2})$" title="Please enter a valid expiry date in MM/YY format" required>
                        </div>
                    
                        <div class="form-group">
                            <label for="cvv">CVV</label>
                            <input type="text" id="cvv" name="cvv" pattern="^\d{3}$" title="Please enter a valid 3 digit CVV" required>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="billingAddress">Billing Address</label>
                        <input type="text" id="billingAddress" name="billingAddress" required>
                    </div>

                    <div class="form-group">
                        <label for="signature">Signature</label>
                        <canvas id="signatureCanvas" width="300" height="150" style="border: 1px solid #000;background-color: aliceblue;border-radius: 5px;"></canvas>
                        <button type="button" id="clearCanvas" class="clear-btn">Clear</button>
                        <input type="hidden" id="signatureInput" name="signature">
                    </div>
                    

                    <button type="submit" id="confirmPaymentBtn" class="payment-btn">Confirm Payment</button>
                </form>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="/js/cart.js"></script>
    <script src="/js/payment.js"></script>

    <script>
        // Select the canvas and get the drawing context
        const canvas = document.getElementById('signatureCanvas');
        const ctx = canvas.getContext('2d');
        const signatureInput = document.getElementById('signatureInput');
    
        let drawing = false;
    
        // Function to start drawing
        function startDrawing(event) {
            drawing = true;
            ctx.beginPath();
            ctx.moveTo(event.offsetX, event.offsetY);
        }
    
        // Function to draw on the canvas
        function draw(event) {
            if (!drawing) return;
            ctx.lineTo(event.offsetX, event.offsetY);
            ctx.stroke();
        }
    
        // Function to stop drawing and capture the signature as data URL
        function stopDrawing() {
            if (!drawing) return;
            drawing = false;
            signatureInput.value = canvas.toDataURL();  // Save the canvas content as a base64 image URL
        }
    
        // Add event listeners to handle drawing
        canvas.addEventListener('mousedown', startDrawing);
        canvas.addEventListener('mousemove', draw);
        canvas.addEventListener('mouseup', stopDrawing);
        canvas.addEventListener('mouseout', stopDrawing);
    
        // Clear the canvas
        document.getElementById('clearCanvas').addEventListener('click', () => {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            signatureInput.value = '';  // Reset the hidden input field
        });
    </script>
</body>
</html>
